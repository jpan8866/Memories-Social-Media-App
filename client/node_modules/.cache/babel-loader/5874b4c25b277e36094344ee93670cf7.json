{"ast":null,"code":"var _jsxFileName = \"/Users/muchderek/Desktop/Web Dev/ReactJS/MERN projects/Memories app auth/Memories-Social-Media-App/client/src/components/Navbar/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { AppBar, Typography, Button, Toolbar, Avatar } from '@material-ui/core';\nimport useStyles from './styles';\nimport memories from '../../images/memories.png';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport { LOGOUT } from '../../actions/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  const styleClasses = useStyles();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile'))); //const user = JSON.parse(localStorage.getItem('profile'));\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch(); // use the current location to perform side effect (whenever it changes, set user e.g. when logging in, obtaining user info from google OAuth)\n\n  const location = useLocation();\n  const logout = useCallback(() => {\n    dispatch({\n      type: LOGOUT\n    });\n    navigate('/auth');\n    setUser(null);\n  }, [dispatch, navigate]);\n  useEffect(() => {\n    // log user out if token has expired\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n\n      if (decodedToken.exp * 1000 < new Date().getTime()) {\n        logout();\n        console.log('logged out');\n      }\n    } // so that the login information changes reflect without having to refresh page\n\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location, user === null || user === void 0 ? void 0 : user.token, logout]);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    className: styleClasses.appBar,\n    position: \"static\",\n    color: \"inherit\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styleClasses.brandContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: Link,\n        to: \"/\",\n        className: styleClasses.heading,\n        variant: \"h2\",\n        align: \"center\",\n        children: \"Memories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: styleClasses.image,\n        src: memories,\n        alt: \"memories\",\n        height: \"60\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: styleClasses.toolbar,\n      children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styleClasses.profile,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: styleClasses.purple,\n          alt: user.result.name,\n          src: user.result.imageUrl,\n          children: user.result.name.charAt(0)\n          /* show first letter if no pic */\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: styleClasses.userName,\n          variant: \"h6\",\n          children: user.result.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          className: styleClasses.logout,\n          color: \"secondary\",\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this) :\n      /*#__PURE__*/\n      // if not logged in, simply show button to log in\n      _jsxDEV(Button, {\n        component: Link,\n        to: \"/auth\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Navbar, \"f4nmE5puUfepp2a/mmTzaftrWk4=\", false, function () {\n  return [useStyles, useNavigate, useDispatch, useLocation];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/muchderek/Desktop/Web Dev/ReactJS/MERN projects/Memories app auth/Memories-Social-Media-App/client/src/components/Navbar/Navbar.js"],"names":["AppBar","Typography","Button","Toolbar","Avatar","useStyles","memories","Link","useNavigate","useLocation","useState","useEffect","useCallback","useDispatch","decode","LOGOUT","Navbar","styleClasses","user","setUser","JSON","parse","localStorage","getItem","navigate","dispatch","location","logout","type","token","decodedToken","exp","Date","getTime","console","log","appBar","brandContainer","heading","image","toolbar","profile","purple","result","name","imageUrl","charAt","userName"],"mappings":"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","sourcesContent":["import { AppBar, Typography, Button, Toolbar, Avatar } from '@material-ui/core';\nimport useStyles from './styles';\nimport memories from '../../images/memories.png';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport { LOGOUT } from '../../actions/types';\n\nfunction Navbar() {\n    const styleClasses = useStyles();\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n    //const user = JSON.parse(localStorage.getItem('profile'));\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    // use the current location to perform side effect (whenever it changes, set user e.g. when logging in, obtaining user info from google OAuth)\n    const location = useLocation();\n\n    const logout = useCallback(() => {\n        dispatch({ type: LOGOUT });\n        navigate('/auth');\n        setUser(null);\n    }, [dispatch, navigate]);\n\n    useEffect(() => {\n        // log user out if token has expired\n        const token = user?.token;\n        if(token) {\n            const decodedToken = decode(token);\n            if(decodedToken.exp * 1000 < new Date().getTime()) {\n                logout();\n                console.log('logged out');\n            }\n        }\n\n        // so that the login information changes reflect without having to refresh page\n        setUser(JSON.parse(localStorage.getItem('profile')));\n    }, [location, user?.token, logout]);\n\n    return (\n        <AppBar className={styleClasses.appBar} position=\"static\" color=\"inherit\">\n            <div className={styleClasses.brandContainer}>\n                {/* gives a nice font to textual elements. Note \"/\" is path to home, clicking on Memories title brings back home, set up in routes */}\n                <Typography component={Link} to=\"/\" className={styleClasses.heading} variant=\"h2\" align=\"center\">Memories</Typography>\n                <img className={styleClasses.image} src={memories} alt=\"memories\" height=\"60\"/>\n            </div> \n            {/* In the App bar, if logged in, we want to show user avatar, username and logout button */}\n            <Toolbar className={styleClasses.toolbar}>\n                {user ? (\n                    <div className={styleClasses.profile}>\n                        <Avatar className={styleClasses.purple} alt={user.result.name} src={user.result.imageUrl}>\n                            {user.result.name.charAt(0) /* show first letter if no pic */}  \n                        </Avatar>\n                        <Typography className={styleClasses.userName} variant=\"h6\">{user.result.name}</Typography>\n                        <Button variant=\"contained\" className={styleClasses.logout} color=\"secondary\" onClick={logout}>Logout</Button>\n                    </div>\n                ) : ( // if not logged in, simply show button to log in\n                    <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\n                )}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Navbar\n"]},"metadata":{},"sourceType":"module"}