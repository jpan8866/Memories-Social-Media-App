{"ast":null,"code":"var _jsxFileName = \"/Users/muchderek/Desktop/Web Dev/Memories app/client/src/components/Posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport Post from \"./Post/Post\";\nimport useStyles from './styles';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport { getPosts } from \"../../actions/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const postsStyles = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n  const posts = useSelector(state => state.posts.posts); // note 1st posts is the postsReducer, 2nd is the posts element of that state object (see postsReducer)\n\n  console.log(posts);\n  return (// if no posts or if still loading (since async), display spinning circle\n    // else display posts\n    !posts.length ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  );\n};\n\n_s(Posts, \"tgzjcd0jeoX7UHLomXSA18vTUHg=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/muchderek/Desktop/Web Dev/Memories app/client/src/components/Posts/Posts.js"],"names":["Post","useStyles","useSelector","useDispatch","Grid","CircularProgress","useEffect","getPosts","Posts","postsStyles","dispatch","posts","state","console","log","length","classes","container","map","post","_id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,mBAAvC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,WAAW,GAAGR,SAAS,EAA7B;AACA,QAAMS,QAAQ,GAAGP,WAAW,EAA5B;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR;AACH,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAIA,QAAMC,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYA,KAAtB,CAAzB,CARgB,CAShB;;AACCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,SACI;AACA;AACA,KAACA,KAAK,CAACI,MAAP,gBAAgB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAAhB,gBACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEC,OAAO,CAACC,SAAzB;AAAoC,MAAA,SAAS,MAA7C;AAA8C,MAAA,UAAU,EAAC,SAAzD;AAAmE,MAAA,OAAO,EAAE,CAA5E;AAAA,gBACKN,KAAK,CAACO,GAAN,CAAWC,IAAD,iBACP,QAAC,IAAD;AAAqB,QAAA,IAAI,MAAzB;AAA0B,QAAA,EAAE,EAAE,EAA9B;AAAkC,QAAA,EAAE,EAAE,CAAtC;AAAA,+BAEI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AAFJ,SAAWA,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AAJR;AAcH,CAzBD;;GAAMZ,K;UACkBP,S,EACHE,W,EAMHD,W;;;KARZM,K;AA2BN,eAAeA,KAAf","sourcesContent":["import Post from \"./Post/Post\";\nimport useStyles from './styles';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useEffect } from 'react';\nimport { getPosts } from \"../../actions/posts\";\n\nconst Posts = () => {\n    const postsStyles = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getPosts());\n    }, [dispatch]);\n\n    const posts = useSelector(state => state.posts.posts) \n    // note 1st posts is the postsReducer, 2nd is the posts element of that state object (see postsReducer)\n     console.log(posts);\n    return (\n        // if no posts or if still loading (since async), display spinning circle\n        // else display posts\n        !posts.length ? <CircularProgress /> : (\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n                {posts.map((post) => (\n                    <Grid key={post._id} item xs={12} sm={6}>\n                        {/* send the post to the Post component as prop */}\n                        <Post post={post} />\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    );\n};\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}