{"ast":null,"code":"var _jsxFileName = \"/Users/muchderek/Desktop/Web Dev/ReactJS/MERN projects/Memories app auth/Memories-Social-Media-App/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport useStyles from './styles';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './Icon';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { mergeClasses } from '@material-ui/styles';\nimport Input from './Input';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Auth() {\n  _s();\n\n  const authStyles = useStyles();\n  const [isSignup, setIsSignup] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => {\n    // toggle state of showPassword\n    setShowPassword(!showPassword);\n  };\n\n  const switchMode = () => {\n    setIsSignup(!isSignup); // reset show password\n\n    handleShowPassword();\n  };\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const googleSuccess = async res => {\n    console.log(res);\n  };\n\n  const googleFailure = () => {\n    console.log('Google sign in was unsuccessful. Try again.');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: authStyles.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: authStyles.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: authStyles.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup &&\n          /*#__PURE__*/\n          // ask for first and last name if signing up\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"Last Name\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"repeat Password\",\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullwidth: \"true\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: authStyles.submit,\n          children: isSignup ? \"Sign Up\" : \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"204745316346-dqj9d5f1rct95bgchn5i43vvo8gjhlk1.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: authStyles.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 40\n            }, this),\n            variant: \"contained\",\n            children: \"Google Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign In' : 'Don\\'t have an account? Sign Up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Auth, \"rdnhH3fFQBGkFYV+2Q5NtvVb2ys=\", false, function () {\n  return [useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/muchderek/Desktop/Web Dev/ReactJS/MERN projects/Memories app auth/Memories-Social-Media-App/client/src/components/Auth/Auth.js"],"names":["useStyles","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","Icon","LockOutlinedIcon","mergeClasses","Input","useState","Auth","authStyles","isSignup","setIsSignup","showPassword","setShowPassword","handleShowPassword","switchMode","handleSubmit","handleChange","googleSuccess","res","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import useStyles from './styles'\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './Icon';\n\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { mergeClasses } from '@material-ui/styles';\nimport Input from './Input';\nimport { useState } from 'react';\n\nfunction Auth() {\n    const authStyles = useStyles();\n\n    const [isSignup, setIsSignup] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleShowPassword = () => {\n        // toggle state of showPassword\n        setShowPassword(!showPassword);\n    };\n\n    const switchMode = () => {\n        setIsSignup(!isSignup);\n        // reset show password\n        handleShowPassword();\n    };\n\n    const handleSubmit = () => {\n\n    };\n\n    const handleChange = () => {\n\n    };\n\n    const googleSuccess = async (res) => {\n        console.log(res);\n    };\n\n    const googleFailure = () => {\n        console.log('Google sign in was unsuccessful. Try again.');\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={authStyles.paper} elevation={3}>\n                <Avatar className={authStyles.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n            <Typography variant=\"h5\">{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\n            <form className={authStyles.form} onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                    { isSignup && ( // ask for first and last name if signing up\n                        <>\n                            <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                            <Input name=\"Last Name\" label=\"Last Name\" handleChange={handleChange} half />\n                        </>\n                    )}\n                    <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n                    <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\n                    {/* If this is signing up, then we need a confirm password field */}\n                    { isSignup && <Input name=\"confirmPassword\" label=\"repeat Password\" handleChange={handleChange} />}\n                </Grid>\n                <Button type=\"submit\" fullwidth=\"true\" variant=\"contained\" color=\"primary\" className={authStyles.submit}>\n                    {isSignup ? \"Sign Up\" : \"Log In\"}\n                </Button>\n                <GoogleLogin\n                    clientId=\"204745316346-dqj9d5f1rct95bgchn5i43vvo8gjhlk1.apps.googleusercontent.com\"\n                    render={(renderProps) => (\n                        <Button \n                            className={authStyles.googleButton}\n                            color=\"primary\"\n                            fullWidth\n                            onClick={renderProps.onClick}\n                            disabled={renderProps.disabled}\n                            startIcon={<Icon />}\n                            variant=\"contained\"\n                        >\n                        Google Log in\n                        </Button>\n                    )}\n                    onSuccess={googleSuccess}\n                    onFailure={googleFailure}\n                    cookiePolicy=\"single_host_origin\"\n                />\n                <Grid container justifyContent=\"flex-end\">\n                    <Grid item>\n                        <Button onClick={switchMode}>\n                            {isSignup ? 'Already have an account? Sign In' : 'Don\\'t have an account? Sign Up'}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}