{"ast":null,"code":"var _jsxFileName = \"/Users/muchderek/Desktop/Web Dev/Memories app/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const formStyles = useStyles();\n\n  const handleSubmit = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: formStyles.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: formStyles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true\n        /* data from post will be stored in the state object postData, \n        and each object key will be a specific text field */\n        ,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"H4m+i0/3bDx+RExlkNouwsPLxHY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/muchderek/Desktop/Web Dev/Memories app/client/src/components/Form/Form.js"],"names":["useStyles","TextField","Button","Typography","Paper","useState","Form","postData","setPostData","creator","title","message","tags","selectedFile","formStyles","handleSubmit","paper","form","e","target","value"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,UAAtB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,KAAxC,QAAqD,mBAArD;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;AACrCI,IAAAA,OAAO,EAAE,EAD4B;AAErCC,IAAAA,KAAK,EAAE,EAF8B;AAGrCC,IAAAA,OAAO,EAAE,EAH4B;AAIrCC,IAAAA,IAAI,EAAE,EAJ+B;AAKrCC,IAAAA,YAAY,EAAE;AALuB,GAAD,CAAxC;AAQA,QAAMC,UAAU,GAAGd,SAAS,EAA5B;;AAEA,QAAMe,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,sBACI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAED,UAAU,CAACE,KAA7B;AAAA,2BACI;AAAM,MAAA,YAAY,EAAC,KAAnB;AACA,MAAA,UAAU,MADV;AAEA,MAAA,SAAS,EAAEF,UAAU,CAACG,IAFtB;AAGA,MAAA,QAAQ,EAAEF,YAHV;AAAA,8BAII,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,SADL;AAEA,QAAA,OAAO,EAAC,UAFR;AAGA,QAAA,KAAK,EAAC,SAHN;AAIA,QAAA,SAAS;AACT;AAChB;AANgB;AAOA,QAAA,KAAK,EAAER,QAAQ,CAACE,OAPhB;AAQA,QAAA,QAAQ,EAAGS,CAAD,IAAOV,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,UAAAA,OAAO,EAAES,CAAC,CAACC,MAAF,CAASC;AAAjC,SAAD;AAR5B;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CApCD;;GAAMd,I;UASiBN,S;;;KATjBM,I;AAsCN,eAAeA,IAAf","sourcesContent":["import useStyles from './styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useState } from 'react';\n\nconst Form = () => {\n    const [postData, setPostData] = useState({\n        creator: '',\n        title: '',\n        message: '',\n        tags: '',\n        selectedFile: ''\n    });\n\n    const formStyles = useStyles();\n    \n    const handleSubmit = () => {\n\n    };\n\n    return (\n        <Paper className={formStyles.paper}>\n            <form autoComplete=\"off\" \n            noValidate \n            className={formStyles.form} \n            onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">Creating a Memory</Typography>\n                <TextField \n                name=\"creator\" \n                variant=\"outlined\" \n                label=\"Creator\" \n                fullWidth\n                /* data from post will be stored in the state object postData, \n                and each object key will be a specific text field */\n                value={postData.creator}\n                onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n                {/* We need to use spread to keep other properties of state postData intact,\n                otherwise the other text fields will disappear and only creator will remain */}\n            </form>\n        </Paper>\n    );\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}