{"ast":null,"code":"// use axios to make api calls (can also use fetch)\nimport axios from 'axios'; //const url = '/api/posts'; // recall that this url goes to our posts routes in backend\n// use baseURL instead, change axios. to API. below\n\nconst API = axios.create({\n  baseURL: \"http://127.0.0.1:5000/api\"\n}); // intercept all below requests and populate req with token if logged in\n\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse.getItem('profile').token}`;\n  }\n\n  return req;\n}); // used with get, this returns all posts\n\nexport const fetchPosts = () => API.get('/posts');\nexport const createPost = newPost => API.post('/posts', newPost);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`); // Note that Axios automatically serializes object to JSON\n\nexport const signIn = formData => API.post('/user/signin', formData);\nexport const signUp = formData => API.post('/user/signup', formData);","map":{"version":3,"sources":["/Users/muchderek/Desktop/Web Dev/ReactJS/MERN projects/Memories app auth/Memories-Social-Media-App/client/src/api/index.js"],"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPosts","get","createPost","newPost","post","updatePost","id","updatedPost","patch","deletePost","delete","likePost","signIn","formData","signUp"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AAEA;;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAZ,C,CAEA;;AACAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AAClC,MAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAH,EAAoC;AAChCF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAASC,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAmB,SAAnB,EAA8BK,KAAM,EAA1E;AACH;;AAED,SAAOP,GAAP;AACH,CAND,E,CAQA;;AACA,OAAO,MAAMQ,UAAU,GAAG,MAAMd,GAAG,CAACe,GAAJ,CAAQ,QAAR,CAAzB;AACP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAajB,GAAG,CAACkB,IAAJ,CAAS,QAAT,EAAmBD,OAAnB,CAAhC;AACP,OAAO,MAAME,UAAU,GAAG,CAACC,EAAD,EAAKC,WAAL,KAAqBrB,GAAG,CAACsB,KAAJ,CAAW,UAASF,EAAG,EAAvB,EAA0BC,WAA1B,CAAxC;AACP,OAAO,MAAME,UAAU,GAAIH,EAAD,IAAQpB,GAAG,CAACwB,MAAJ,CAAY,UAASJ,EAAG,EAAxB,CAA3B;AACP,OAAO,MAAMK,QAAQ,GAAIL,EAAD,IAAQpB,GAAG,CAACsB,KAAJ,CAAW,UAASF,EAAG,WAAvB,CAAzB,C,CACP;;AAEA,OAAO,MAAMM,MAAM,GAAIC,QAAD,IAAc3B,GAAG,CAACkB,IAAJ,CAAS,cAAT,EAAyBS,QAAzB,CAA7B;AACP,OAAO,MAAMC,MAAM,GAAID,QAAD,IAAc3B,GAAG,CAACkB,IAAJ,CAAS,cAAT,EAAyBS,QAAzB,CAA7B","sourcesContent":["// use axios to make api calls (can also use fetch)\nimport axios from 'axios';\n\n//const url = '/api/posts'; // recall that this url goes to our posts routes in backend\n\n// use baseURL instead, change axios. to API. below\nconst API = axios.create({ baseURL: \"http://127.0.0.1:5000/api\" });\n\n// intercept all below requests and populate req with token if logged in\nAPI.interceptors.request.use((req) => {\n    if(localStorage.getItem('profile')) {\n        req.headers.Authorization = `Bearer ${JSON.parse.getItem('profile').token}`;\n    }\n    \n    return req;\n})\n\n// used with get, this returns all posts\nexport const fetchPosts = () => API.get('/posts');\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\n// Note that Axios automatically serializes object to JSON\n\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData); "]},"metadata":{},"sourceType":"module"}