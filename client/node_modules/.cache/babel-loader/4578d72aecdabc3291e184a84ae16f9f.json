{"ast":null,"code":"import * as api from '../api'; // use api index file to perform all requests e.g. api.fetchPosts(). Ensures cleanliness\n\nimport * as actions from './types';\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await api.fetchPosts(); // recall we're using axios\n\n    dispatch({\n      type: actions.FETCH_ALL,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const res = await api.createPost(post); // Note that Axios automatically serializes object to JSON\n\n    dispatch({\n      type: actions.CREATE,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    // send update request to backend and get newly updated post as response\n    const res = await api.updatePost(id, post);\n    const updatedPost = res.data;\n    dispatch({\n      type: actions.UPDATE,\n      payload: updatedPost\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/Users/muchderek/Desktop/Web Dev/Memories app/client/src/actions/posts.js"],"names":["api","actions","getPosts","dispatch","res","fetchPosts","type","FETCH_ALL","payload","data","error","console","log","message","createPost","post","CREATE","updatePost","id","updatedPost","UPDATE"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB,C,CACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,UAAJ,EAAlB,CADA,CACoC;;AACpCF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,OAAO,CAACM,SADT;AAELC,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAIH,GAND,CAME,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CAVM;AAYP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOZ,QAAP,IAAoB;AACpD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACc,UAAJ,CAAeC,IAAf,CAAlB,CADA,CAEA;;AACAZ,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,OAAO,CAACe,MADT;AAELR,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CAXM;AAaP,OAAO,MAAMI,UAAU,GAAG,CAACC,EAAD,EAAKH,IAAL,KAAc,MAAOZ,QAAP,IAAoB;AACxD,MAAI;AACA;AACA,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACiB,UAAJ,CAAeC,EAAf,EAAmBH,IAAnB,CAAlB;AACA,UAAMI,WAAW,GAAGf,GAAG,CAACK,IAAxB;AAEAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEL,OAAO,CAACmB,MADT;AAELZ,MAAAA,OAAO,EAAEW;AAFJ,KAAD,CAAR;AAIH,GATD,CASE,OAAOT,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CAbM","sourcesContent":["import * as api from '../api';\n// use api index file to perform all requests e.g. api.fetchPosts(). Ensures cleanliness\nimport * as actions from './types';\n\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const res = await api.fetchPosts(); // recall we're using axios\n        dispatch({\n            type: actions.FETCH_ALL,\n            payload: res.data\n        });\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const res = await api.createPost(post);\n        // Note that Axios automatically serializes object to JSON\n        dispatch({\n            type: actions.CREATE,\n            payload: res.data\n        });\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        // send update request to backend and get newly updated post as response\n        const res = await api.updatePost(id, post);\n        const updatedPost = res.data;\n\n        dispatch({\n            type: actions.UPDATE,\n            payload: updatedPost\n        })\n    } catch (error) {\n        console.log(error.message);\n    }\n}"]},"metadata":{},"sourceType":"module"}