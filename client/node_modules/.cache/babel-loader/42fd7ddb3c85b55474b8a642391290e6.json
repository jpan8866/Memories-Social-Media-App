{"ast":null,"code":"import { AUTH, LOGOUT } from '../actions/types';\nconst initialState = {\n  authData: null\n}; // get user data\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AUTH:\n      // Need to use JSON.stringify because objects are stored as addresses in localStorage. \n      // we can extract this info in Navbar using JSON.parse\n      localStorage.setItem('profile', JSON.stringify({ ...(action === null || action === void 0 ? void 0 : action.payload)\n      }));\n      console.log(action === null || action === void 0 ? void 0 : action.payload);\n      return { ...state,\n        authData: action === null || action === void 0 ? void 0 : action.payload\n      };\n\n    case LOGOUT:\n      // clear the login status from UI\n      localStorage.clear();\n      console.log(\"logged out\"); // erase authData when logging out\n\n      return { ...state,\n        authData: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/Users/muchderek/Desktop/Web Dev/ReactJS/MERN projects/Memories app auth/Memories-Social-Media-App/client/src/reducers/authReducer.js"],"names":["AUTH","LOGOUT","initialState","authData","authReducer","state","action","type","localStorage","setItem","JSON","stringify","payload","console","log","clear"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB,C,CAGA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACH,YAAP,EAAqBI,MAArB,KAAgC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,IAAL;AACI;AACA;AACAQ,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAe,EAAE,IAAGL,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEM,OAAX;AAAF,OAAf,CAAhC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ,aAAYA,MAAZ,uBAAYA,MAAM,CAAEM,OAApB;AACA,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,QAAQ,EAAEG,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEM;AAFf,OAAP;;AAIJ,SAAKX,MAAL;AACI;AACAO,MAAAA,YAAY,CAACO,KAAb;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAHJ,CAII;;AACA,aAAO,EACH,GAAGT,KADA;AAEHF,QAAAA,QAAQ,EAAE;AAFP,OAAP;;AAIJ;AACI,aAAOE,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import { AUTH, LOGOUT } from '../actions/types';\n\nconst initialState = {\n    authData: null\n}\n// get user data\nconst authReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case AUTH:\n            // Need to use JSON.stringify because objects are stored as addresses in localStorage. \n            // we can extract this info in Navbar using JSON.parse\n            localStorage.setItem('profile', JSON.stringify({ ...action?.payload }));\n            console.log(action?.payload)\n            return {\n                ...state,\n                authData: action?.payload\n            };\n        case LOGOUT:\n            // clear the login status from UI\n            localStorage.clear();\n            console.log(\"logged out\");\n            // erase authData when logging out\n            return {\n                ...state,\n                authData: null\n            };\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}