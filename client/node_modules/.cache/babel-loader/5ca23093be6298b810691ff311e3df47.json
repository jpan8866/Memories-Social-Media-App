{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, SET_ID, DELETE, LIKE_POST } from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  updateId: null\n};\n\nconst postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [action.payload, ...state.posts]\n      };\n\n    case UPDATE:\n      // We want to replace the post with matching id with the newly updated post\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case SET_ID:\n      return { ...state,\n        updateId: action.payload\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    case LIKE_POST:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? post.likeCount = action.payload.likeCount : post)\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nexport default postsReducer;","map":{"version":3,"sources":["/Users/muchderek/Desktop/Web Dev/ReactJS/MERN projects/Memories app/client/src/reducers/postsReducer.js"],"names":["FETCH_ALL","CREATE","UPDATE","SET_ID","DELETE","LIKE_POST","initialState","posts","updateId","postsReducer","state","action","type","payload","map","post","_id","filter","likeCount"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,MAA5C,EAAoDC,SAApD,QAAqE,kBAArE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAACJ,YAAP,EAAqBK,MAArB,KAAgC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,SAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAKZ,MAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHH,QAAAA,KAAK,EAAE,CAACI,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACH,KAA1B;AAFJ,OAAP;;AAIJ,SAAKL,MAAL;AACI;AACA,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAA3E;AAFJ,OAAP;;AAIJ,SAAKZ,MAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AAFd,OAAP;;AAIJ,SAAKT,MAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYU,MAAZ,CAAmBF,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA/C;AAFJ,OAAP;;AAIJ,SAAKR,SAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYO,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCD,IAAI,CAACG,SAAL,GAAiBP,MAAM,CAACE,OAAP,CAAeK,SAAlE,GAA8EH,IAAtG;AAFJ,OAAP;;AAIJ;AACI,aAAOL,KAAP;AAjCR;;AAkCC;AACJ,CApCD;;AAsCA,eAAeD,YAAf","sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, SET_ID, DELETE, LIKE_POST } from \"../actions/types\";\n\nconst initialState = {\n    posts: [],\n    updateId: null\n};\n\nconst postsReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case FETCH_ALL:\n            return {\n                ...state,\n                posts: action.payload\n            };\n        case CREATE:\n            return {\n                ...state,\n                posts: [action.payload, ...state.posts]\n            };\n        case UPDATE:\n            // We want to replace the post with matching id with the newly updated post\n            return {\n                ...state,\n                posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n            };\n        case SET_ID:\n            return {\n                ...state,\n                updateId: action.payload\n            };\n        case DELETE:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== action.payload)\n            };\n        case LIKE_POST:\n            return {\n                ...state,\n                posts: state.posts.map(post => post._id === action.payload._id ? post.likeCount = action.payload.likeCount : post)\n            }\n        default: \n            return state;\n    };\n};\n\nexport default postsReducer;"]},"metadata":{},"sourceType":"module"}