{"ast":null,"code":"var _jsxFileName = \"/Users/muchderek/Desktop/Web Dev/Memories app/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from './actions/posts';\nimport memories from './images/memories.png';\nimport Posts from './components/Posts/Posts';\nimport Form from './components/Form/Form';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //functional component\n  const styleClasses = useStyles(); // Note that useStyles() returns an object containing 3 style items for appBar, heading and image\n  // use them for below respective elements:\n  // define dispatch using useDispatch() hook\n\n  const dispatch = useDispatch(); // simulate componentWillMount with useEffect() hook\n\n  useEffect = (() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n  return (\n    /*#__PURE__*/\n    // use container to center everything\n    _jsxDEV(Container, {\n      maxwidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        className: styleClasses.appBar,\n        position: \"static\",\n        color: \"inherit\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: styleClasses.heading,\n          variant: \"h2\",\n          align: \"center\",\n          children: \"Memories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styleClasses.image,\n          src: memories,\n          alt: \"memories\",\n          width: \"100\",\n          height: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grow, {\n        in: true,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"space-between\",\n            alignItems: \"stretch\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 7,\n              children: /*#__PURE__*/_jsxDEV(Posts, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(App, \"5G7QPHIy7ybbmlbaN4bkCKw+yi4=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/muchderek/Desktop/Web Dev/Memories app/client/src/App.js"],"names":["useEffect","Container","AppBar","Typography","Grow","Grid","useDispatch","getPosts","memories","Posts","Form","useStyles","App","styleClasses","dispatch","appBar","heading","image"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,IAAxC,EAA8CC,IAA9C,QAA0D,mBAA1D;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAAE;AAChB,QAAMC,YAAY,GAAGF,SAAS,EAA9B,CADc,CAEd;AACA;AAEA;;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B,CANc,CAOd;;AACAN,EAAAA,SAAS,IAAI,MAAM;AACfc,IAAAA,QAAQ,CAACP,QAAQ,EAAT,CAAR;AACH,GAFY,EAEV,CAACO,QAAD,CAFM,CAAT;AAIA;AAAA;AACI;AACA,YAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAED,YAAY,CAACE,MAAhC;AAAwC,QAAA,QAAQ,EAAC,QAAjD;AAA0D,QAAA,KAAK,EAAC,SAAhE;AAAA,gCAEI,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEF,YAAY,CAACG,OAApC;AAA6C,UAAA,OAAO,EAAC,IAArD;AAA0D,UAAA,KAAK,EAAC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAEH,YAAY,CAACI,KAA7B;AAAoC,UAAA,GAAG,EAAET,QAAzC;AAAmD,UAAA,GAAG,EAAC,UAAvD;AAAkE,UAAA,KAAK,EAAC,KAAxE;AAA8E,UAAA,MAAM,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,IAAD;AAAM,QAAA,EAAE,MAAR;AAAA,+BACI,QAAC,SAAD;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,cAAc,EAAC,eAA/B;AAA+C,YAAA,UAAU,EAAC,SAA1D;AAAoE,YAAA,OAAO,EAAE,CAA7E;AAAA,oCAEI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAKI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAmB,cAAA,EAAE,EAAE,CAAvB;AAAA,qCACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAwBH,CApCD;;GAAMI,G;UACmBD,S,EAKJL,W;;;KANfM,G;AAsCN,eAAeA,GAAf","sourcesContent":["import { useEffect } from 'react';\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from './actions/posts';\n\nimport memories from './images/memories.png';\nimport Posts from './components/Posts/Posts';\nimport Form from './components/Form/Form';\nimport useStyles from './styles';\n\nconst App = () => { //functional component\n    const styleClasses = useStyles();\n    // Note that useStyles() returns an object containing 3 style items for appBar, heading and image\n    // use them for below respective elements:\n\n    // define dispatch using useDispatch() hook\n    const dispatch = useDispatch();\n    // simulate componentWillMount with useEffect() hook\n    useEffect = (() => {\n        dispatch(getPosts());\n    }, [dispatch]);\n\n    return (\n        // use container to center everything\n        <Container maxwidth=\"lg\">\n            <AppBar className={styleClasses.appBar} position=\"static\" color=\"inherit\">\n                {/* gives a nice font to textual elements */}\n                <Typography className={styleClasses.heading} variant=\"h2\" align=\"center\">Memories</Typography>\n                <img className={styleClasses.image} src={memories} alt=\"memories\" width=\"100\" height=\"100\"/>\n            </AppBar>\n            {/* use Grow for animation */}\n            <Grow in>\n                <Container>\n                    <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\n                        {/* full screen for xtra small screen, and 7 out of 12 spaces on small/medium devices */}\n                        <Grid item xs={12} sm={7}>\n                            <Posts />\n                        </Grid>\n                        <Grid item xs={12} sm={4}>\n                            <Form />\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Grow>\n        </Container>      \n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}